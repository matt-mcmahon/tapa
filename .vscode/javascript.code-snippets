{
	"Re-Export Module": {
		"prefix": "rexport",
		"body": [
			"export { $1 } from \"./$1.js\"",
		],
		"description": "Re-Exports the Module"
	},
	"New TypeScript Definition File": {
		"prefix": "new dts",
		"body": [
			"export declare const ${1:${TM_FILENAME/(.d.ts)//}}: ${0:value => () => value}"
		],
		"description": "Log output to console"
	},
	"New Module File": {
		"prefix": "new module",
		"body": [
			"const ${1:${TM_FILENAME_BASE}} = ${0:value => () => value}",
			"",
			"export { $1, $1 as default }"
		],
		"description": "Log output to console"
	},
	"New Test File": {
		"prefix": "new test",
		"body": [
			"import { describe } from \"./describe\"",
			"import { dtsExists } from \"./dtsExists\"",
			"import { ",
			"  ${1:${TM_FILENAME_BASE/(.test|.spec)//}} as namedExport,",
			"  default as $1 ",
			"} from './$1.js'",
			"import { $1 as indexExport } from './$1'",
			"",
			"describe(\"$1 module\", async assert => {",
			"  assert({",
			"    given: 'a module named \"./$1.js\"',",
			"    should: \"have a default export\",",
			"    actual: typeof $1,",
			"    expected: \"function\",",
			"  })",
			"  ",
			"  assert({",
			"    given: 'import { $1 as namedExport } from \"./$1.js\"',",
			"    should: \"be identical to default export\",",
			"    actual: namedExport,",
			"    expected: $1,",
			"  })",
			"  ",
			"  assert({",
			"    should: \"be identical to default export\",",
			"    actual: indexExport,",
			"    expected: $1,",
			"  })",
			"  ",
			"  assert(dtsExists(import.meta.url, \"$1\"))",
			"  ",
			"  assert.fail(\"No Functionality Tests\")",
			"})",
		]
	}
}
